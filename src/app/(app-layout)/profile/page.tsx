"use client";

import { useEffect, useState } from "react";
import { useSelector } from "react-redux";
import { RootState } from "@/store";

type TestSubmission = {
  id: number;
  testId: number;
  earnedPoints: number;
  totalPoints: number;
  createdAt: string;
};

type UserData = {
  id: number;
  username: string;
  email: string;
  testSubmissions: TestSubmission[];
};

export default function ProfilePage() {
  const identifier = useSelector((state: RootState) => state.auth.identifier);
  const [userData, setUserData] = useState<UserData | null>(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const fetchMe = async () => {
      const token = localStorage.getItem("token");
      try {
        const res = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/users/me`, {
          credentials: "include",
          headers: {
            "Content-Type": "application/json",
            Authorization: `Bearer ${token}`,
          },
        });
        if (!res.ok) throw new Error("Failed to fetch user info");
        const data = await res.json();
        setUserData(data);
      } catch (err) {
        console.error(err);
      } finally {
        setLoading(false);
      }
    };

    fetchMe();
  }, []);

  return (
    <div>
      <h1>–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</h1>

      <p>
        –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è / Email:{" "}
        <strong>
          {userData
            ? `${userData.username} / ${userData.email}`
            : identifier ?? "–ì–æ—Å—Ç—å"}
        </strong>
      </p>

      <p>–†–µ–π—Ç–∏–Ω–≥: 12345 (–∑–∞–≥–ª—É—à–∫–∞)</p>
      <p>–ü—Ä–æ–≥—Ä–µ—Å—Å –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è ‚Äî –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –ø–æ–∑–∂–µ</p>

      <hr />

      <h2>–ú–æ–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã</h2>

      {loading ? (
        <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>
      ) : userData?.testSubmissions?.length ? (
        <ul className="list-unstyled">
          {userData.testSubmissions.map((submission) => (
            <li key={submission.id}>
              üìù –¢–µ—Å—Ç #{submission.testId}:{" "}
              <strong>
                {submission.earnedPoints}/{submission.totalPoints} –±–∞–ª–ª–æ–≤
              </strong>{" "}
              ‚Äî{" "}
              <span className="text-muted">
                {new Date(submission.createdAt).toLocaleString()}
              </span>
            </li>
          ))}
        </ul>
      ) : (
        <p className="text-muted">–ù–µ—Ç –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤</p>
      )}
    </div>
  );
}
